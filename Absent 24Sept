public static int powerMod(int a, int b, int m) {
        // TODO: Implement (Problem a)
        if (a < 0 || b < 0 || m <= 0) {
            return -1;
        }
        double ab = Math.pow(a,b);
        Double val = ab % m;
        return val.intValue();
    }

"""     public static int[] computePiInHex(int precision) {
        // TODO: Implement (Problem b)
        if (precision < 0) {
            return null;
        }
        int[] val = new int[precision];

        for (int i = 0; i < val.length; i++) {
            val[i] = piDigit(i+1);
        }
        return val;
    }
""""

"""     public static int[] convertBase(int[] digits, int baseA,
                                    int baseB, int precisionB) {
        // TODO: Implement (Problem c)
        if (baseA < 2 || baseB < 2 || precisionB < 1) {
            return null;
        }

        int carry;
        int[] output = new int[precisionB];

        for(int i =0; i < precisionB; i++) {
            carry = 0;
            for (int j = digits.length-1; j >= 0; j --) {
                if (digits[j] < 0 || digits[j] >=baseA) {
                    return null;
                }
                int d = digits[j];
                int x = d*baseB + carry;
                digits[j] = x % baseA;
                carry = x/baseA;
                output[i] = carry;
            }
        }
        return output;
    } """